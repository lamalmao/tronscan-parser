generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Contract {
  address           String   @id
  name              String
  description       String
  balance           Float    @default(0)
  balanceInUsd      Float    @default(0)
  trxCount          Int      @default(0)
  balanceWithTokens Int      @default(0)
  vip               Boolean
  token             Json
  dateCreated       DateTime
  dateLoaded        DateTime @default(now())
  creator           Wallet?  @relation(fields: [creatorAddress], references: [address])
  creatorAddress    String?
}

model Wallet {
  address           String           @id
  loaded            DateTime         @default(now())
  lastUpdate        DateTime
  incoming          Transaction[]    @relation("incomingTransactions")
  outcoming         Transaction[]    @relation("outcomingTransactions")
  currentSnapshotId Int
  snapshots         WalletSnapshot[]
  contracts         Contract[]
}

model WalletSnapshot {
  id                Int      @id @default(autoincrement())
  tokensAmount      Float    @default(0)
  walletAmountInUsd Float    @default(0)
  tokens            Json
  loadDate          DateTime @default(now())
  wallet            Wallet   @relation(fields: [walletAddress], references: [address])
  walletAddress     String
}

model Transaction {
  hash            String   @id
  sender          Wallet   @relation("incomingTransactions", fields: [from], references: [address])
  recipient       Wallet   @relation("outcomingTransactions", fields: [to], references: [address])
  confirmed       Boolean
  revert          Boolean
  amount          Float
  transactionDate DateTime @default(now())
  loadDate        DateTime @default(now())
  from            String
  to              String
}
